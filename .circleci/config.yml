version: 2

jobs:
  build:
    machine:
      image: ubuntu-2004:202104-01

    steps:
      - checkout

      - run:
          name: Authenticate with Artifactory
          command: curl -ks -u$DOCKER_USER:$DOCKER_PASS "https://d2lartifacts.jfrog.io/artifactory/api/npm/npm-local/auth/d2l" -o ~/project/.npmrc

      - run:
          name: Start docker containers
          command: docker-compose -f ./dev/docker-compose.yml up -d dynamodb

      - run:
          name: Install dependencies and run tests
          command: |
            export NVM_DIR="/opt/circleci/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
            [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion
            nvm install 14
            nvm alias default 14
            if [ ! -d node_modules ]; then
              npm install -g npm@6.14.11
              npm ci
            fi
            npm run ci

      - persist_to_workspace:
          root: ~/project
          paths: .

  deploy:
    machine:
      image: ubuntu-2004:202104-01

    steps:
      - attach_workspace:
          at: ~/project

      - run:
          name: Install node and npm
          command: |
            export NVM_DIR="/opt/circleci/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
            [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion
            nvm install 14
            nvm alias default 14

      - run:
          command: |
            docker login --username=$DOCKER_USER --password=$DOCKER_PASS d2lartifacts-dockerv2-local.jfrog.io
            npm install -g publish
            publish

      - run:
        - name: Publish
        env:
          NPM_TOKEN: ${{secrets.NPM_TOKEN}}
        run:
          name: Publish to npm registry
          command: |
            npm config set //registry.npmjs.org/:_authToken ${NPM_TOKEN}
            npm publish

workflows:
  version: 2

  build-and-publish:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only:
                - master
